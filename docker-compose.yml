services:
  postgres:
    image: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql #executa na inicialização do container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
      - keycloak_network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0.0
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8090
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: 1234
    ports:
      - "8090:8080"
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network
    expose:
      - 8090
    command: 
      - start-dev

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    restart: on-failure
    networks:
      - keycloak_network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/teste
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
    expose:
      - 8081

volumes:
  postgres_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge